{"version":3,"sources":["components/Burger/BurgerIngridient/BurgerIngridient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","hoc/Layout/Layout.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToogle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToogle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","hoc/axios-orders.js","components/Burger/BurgerIngridient/BurgerIngridient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","store/actions/burgerBurger.js","store/actions/order.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/App.js","reportWebVitals.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","Logo","className","classes","to","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","link","exact","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","menuClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","sideDrawerClasses","SideDrawer","Close","open","Open","join","Layout","state","sideDrawerShow","sideDrawerCloseHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Footer","Component","instance","axios","create","baseURL","BurgerIngridient","ingridient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngridients","Object","keys","ingridients","map","igKey","Array","_","i","reduce","arr","el","concat","length","console","log","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","crtl","addIg","removeIg","style","marginTop","OrderButton","orderDisabled","orderBtn","Modal","nextProps","nextState","purchaseCancel","transform","opacity","button","Button","btnType","OrderSummary","charAt","toUpperCase","slice","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrapperComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","ADD_INGRIDIENT","REMOVE_INGRIDIENT","SET_INGRIDIENT","FETCH_INGRIDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","DELETE_ORDER","initIngridients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","fetchedOrders","key","push","orders","err","BurgerBuilder","purchasing","updatePurchaseState","igkey","sum","orderPurchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","onInitIngridients","disabledInfo","ings","textAlign","Spinner","orderSummary","onIngridientAdded","onIngridientRemoved","totalPrice","connect","burgerBuilder","purchased","order","ingName","ingridientName","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","errorMassege","invalid","shouldValidate","touched","Invalid","ErrorMassege","errMassege","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","address","street","zipcode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","timeNow","Date","toLocaleString","formElementIdentifier","orderDate","onOrderBurger","inputChangedHandler","inputIdentifier","cloneOrderForm","cloneElementForm","target","checkValidity","rules","isValid","trim","formElementsArray","config","form","onSubmit","formElement","loading","Checkout","goBack","replace","summary","purchasedRedirect","path","match","url","component","amount","ingridientOutput","ig","display","textTransform","border","padding","Order","Number","parseFloat","date","delete","Orders","onFetchOrders","onDeleteOrders","reverse","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","INGRIDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","newOrders","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,YAAc,sCAAsC,SAAW,mCAAmC,OAAS,iCAAiC,OAAS,iCAAiC,KAAO,+BAA+B,OAAS,iCAAiC,MAAQ,gCAAgC,MAAQ,kC,mBCAxUD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,yBAAyB,KAAO,yBAAyB,MAAQ,4B,mBCAtID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,uBAAuB,aAAe,8B,mBCAvKD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,KAAO,2BAA2B,KAAO,6B,mBCAjJD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,KAAO,sBAAsB,YAAc,+B,mBCAhGD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,OAAS,yB,mBCA7DD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,OAAS,iC,mBCAnFD,EAAOC,QAAU,CAAC,cAAgB,qCAAqC,YAAc,mCAAmC,OAAS,gC,mBCAjID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,OAAS,yB,mBCA7FD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,sB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,gBAAkB,2C,mBCApCD,EAAOC,QAAU,CAAC,aAAe,qC,mBCAjCD,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,OAAS,yB,mBCA3BD,EAAOC,QAAU,CAAC,MAAQ,uB,mBCA1BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,uBAAuB,MAAQ,yB,mBCA1FD,EAAOC,QAAU,CAAC,gBAAkB,2C,mBCApCD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,6B,6JCC1DC,EAFH,SAACC,GAAD,OAAWA,EAAMC,U,kCCAd,MAA0B,wC,QCe1BC,EATF,SAACF,GAAD,OACT,qBAAKG,UAAWC,IAAQF,KAAxB,SACI,cAAC,IAAD,CACIG,GAAG,IADP,SAEI,qBAAKC,IAAKC,EAAYC,IAAI,kB,kCCKvBC,EAXQ,SAACT,GAAD,OACnB,oBAAIG,UAAWC,IAAQM,eAAvB,SACI,cAAC,IAAD,CACIC,gBAAiBP,IAAQQ,OACzBP,GAAIL,EAAMa,KACVC,MAAOd,EAAMc,MAHjB,SAISd,EAAMC,cCERc,EAPS,SAACf,GAAD,OACpB,qBAAIG,UAAWC,IAAQY,gBAAvB,UACI,cAACN,EAAD,CAAgBG,KAAK,IAAIC,OAAK,EAA9B,4BACA,cAACJ,EAAD,CAAgBG,KAAK,UAArB,2B,iBCKOI,EAVM,SAACjB,GAAD,OACjB,sBACIG,UAAWC,IAAQc,aACnBC,QAASnB,EAAMoB,QAFnB,UAGQ,wBACA,wBACA,4BCSGC,EAZC,SAACrB,GAAD,OACZ,yBAAQG,UAAWC,IAAQkB,QAA3B,UACI,cAACJ,EAAD,CAAcE,QAASpB,EAAMuB,cAC7B,qBAAKpB,UAAWC,IAAQF,KAAxB,SACI,cAAC,EAAD,MAEJ,qBAAKC,UAAWC,IAAQoB,YAAxB,SACI,cAACR,EAAD,U,kCCNGS,EAJE,SAACzB,GAAD,OACbA,EAAM0B,KAAO,qBAAKvB,UAAWC,IAAQuB,SAAUR,QAASnB,EAAMoB,UAAkB,MCwBrEQ,EArBI,SAAC5B,GAChB,IAAI6B,EAAoB,CAACzB,IAAQ0B,WAAY1B,IAAQ2B,OAKrD,OAJI/B,EAAMgC,OACNH,EAAoB,CAACzB,IAAQ0B,WAAY1B,IAAQ6B,OAIjD,eAAC,EAAD,WACI,cAACN,EAAD,CAAUD,KAAM1B,EAAMgC,KAAMZ,QAASpB,EAAMoB,UAC3C,sBAAKjB,UAAW0B,EAAkBK,KAAK,KAAvC,UACI,qBAAK/B,UAAWC,IAAQF,KAAxB,SACI,cAAC,EAAD,MAEJ,8BACI,cAACc,EAAD,aCqBLmB,E,4MAnCXC,MAAQ,CACJC,gBAAgB,G,EAGpBC,uBAAyB,WACrB,EAAKC,SAAS,CACVF,gBAAgB,K,EAIxBG,wBAA0B,WACtB,EAAKD,UAAS,SAACE,GACX,MAAO,CAACJ,gBAAiBI,EAAUJ,oB,uDAKvC,OACI,eAAC,EAAD,WACI,cAACf,EAAD,CAASC,YAAamB,KAAKF,0BAC3B,cAACV,EAAD,CAAYE,KAAMU,KAAKN,MAAMC,eAAgBjB,QAASsB,KAAKJ,yBAC3D,sBAAMnC,UAAWC,IAAQuC,QAAzB,SACKD,KAAK1C,MAAMC,WAGhB,wBAAQE,UAAWC,IAAQwC,OAA3B,SACI,iF,GA3BCC,a,uBCANC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,sD,yBC4CEC,E,uKAxCP,IAAIC,EAAa,KAEjB,OAAQT,KAAK1C,MAAMoD,MACf,IAAK,eACDD,EAAa,qBAAKhD,UAAWC,IAAQiD,cACrC,MACJ,IAAK,YACDF,EACI,sBAAKhD,UAAWC,IAAQkD,SAAxB,UACI,qBAAKnD,UAAWC,IAAQmD,SACxB,qBAAKpD,UAAWC,IAAQoD,YAGhC,MACJ,IAAK,OACDL,EAAa,qBAAKhD,UAAWC,IAAQqD,OACrC,MACJ,IAAK,SACDN,EAAa,qBAAKhD,UAAWC,IAAQsD,SACrC,MACJ,IAAK,QACDP,EAAa,qBAAKhD,UAAWC,IAAQuD,QACrC,MACJ,IAAK,QACDR,EAAa,qBAAKhD,UAAWC,IAAQwD,QACrC,MACJ,QACIT,EAAa,KAErB,OAAOA,M,GA/BgBN,a,iBCyBhBgB,EA1BA,SAAC7D,GACZ,IAAI8D,EAAyBC,OAAOC,KAAKhE,EAAMiE,aAC9CC,KAAI,SAAAC,GACD,OAAM,YAAIC,MAAMpE,EAAMiE,YAAYE,KAASD,KAAI,SAACG,EAAGC,GAChD,OAAO,cAAC,EAAD,CAAkClB,KAAMe,GAAjBA,EAAQG,SAEzCC,QAAO,SAACC,EAAKC,GACb,OAAOD,EAAIE,OAAOD,KACnB,IASH,OAPsC,IAAlCX,EAAuBa,SACvBb,EAAyB,yDAG7Bc,QAAQC,IAAIf,GAIR,sBAAK3D,UAAWC,IAAQ0E,OAAxB,UACI,cAAC,EAAD,CAAkB1B,KAAK,cAClBU,EACL,cAAC,EAAD,CAAkBV,KAAK,qB,kCCRpB2B,GAdM,SAAC/E,GAAD,OAEjB,sBAAKG,UAAWC,IAAQ4E,aAAxB,UACI,qBAAK7E,UAAWC,IAAQ6E,MAAxB,SAAgCjF,EAAMkF,QACtC,wBAAQ/E,UAAWC,IAAQ+E,KACvBhE,QAASnB,EAAMoF,QACfC,SAAUrF,EAAMqF,SAFpB,kBAGA,wBACIlF,UAAWC,IAAQkF,KACnBnE,QAASnB,EAAMuF,MAFnB,sBCLFC,GAAW,CACb,CAACN,MAAO,SAAU9B,KAAM,SACxB,CAAC8B,MAAO,SAAU9B,KAAM,SACxB,CAAC8B,MAAO,UAAW9B,KAAM,UACzB,CAAC8B,MAAO,QAAS9B,KAAM,SAyBZqC,GAtBO,SAACzF,GAAD,OAClB,sBAAKG,UAAWC,IAAQsF,cAAxB,UACI,4BAAG,oDAAuB1F,EAAM2F,MAAMC,QAAQ,GAA3C,SACFJ,GAAStB,KAAI,SAAA2B,GACV,OAAO,cAACb,GAAD,CAEHE,MAAOW,EAAKX,MACZK,MAAO,kBAAMvF,EAAM8F,MAAMD,EAAKzC,OAC9BgC,QAAS,kBAAMpF,EAAM+F,SAASF,EAAKzC,OACnCiC,SAAUrF,EAAMqF,SAASQ,EAAKzC,OAJzByC,EAAKX,UAOlB,wBACIc,MAAO,CAACC,UAAW,QACnB9F,UAAWC,IAAQ8F,YACnBb,UAAWrF,EAAMmG,cACjBhF,QAASnB,EAAMoG,SAJnB,0B,oBCKOC,G,oLArBaC,EAAWC,GAC/B,OAAOD,EAAU5E,OAASgB,KAAK1C,MAAM0B,MAAQ4E,EAAUrG,WAAayC,KAAK1C,MAAMC,W,+BAI/E,OACI,eAAC,EAAD,WACI,cAAC0B,EAAD,CAAUD,KAAMgB,KAAK1C,MAAM0B,KAAMN,QAASsB,KAAK1C,MAAMwG,iBACrD,qBACIrG,UAAWC,KAAQiG,MACnBL,MAAO,CACHS,UAAW/D,KAAK1C,MAAM0B,KAAO,gBAAiB,qBAC9CgF,QAAShE,KAAK1C,MAAM0B,KAAO,IAAK,KAJxC,SAMKgB,KAAK1C,MAAMC,kB,GAhBZ4C,a,oBCKL8D,GARA,SAAC3G,GAAD,OACX,wBAAQG,UAAW,CAACC,KAAQwG,OAAQxG,KAAQJ,EAAM6G,UAAU3E,KAAK,KAC7Df,QAASnB,EAAMoB,QACfiE,SAAUrF,EAAMqF,SAFpB,SAGKrF,EAAMC,YC6BA6G,G,uKA9BD,IAAD,OACC7C,EAAcF,OAAOC,KAAKtB,KAAK1C,MAAMiE,aAC1CC,KAAI,SAAAC,GACD,OAAO,+BACMA,EAAM4C,OAAO,GAAGC,cAAgB7C,EAAM8C,MAAM,GADlD,KAEY,EAAKjH,MAAMiE,YAAYE,KAF1BA,MAKpB,OACI,eAAC,EAAD,WACA,4CACA,gFACA,6BACKF,IAEL,4BAAG,mDAAsBvB,KAAK1C,MAAM2F,MAAMC,QAAQ,GAA/C,SACH,sDACA,cAACgB,GAAD,CAAQC,QAAQ,SACRzF,QAASsB,KAAK1C,MAAMkH,kBAD5B,oBAIA,cAACN,GAAD,CAAQC,QAAQ,UACRzF,QAASsB,KAAK1C,MAAMmH,kBAD5B,6B,GAvBetE,a,oBCCZuE,GAFC,kBAAM,qBAAKjH,UAAWC,KAAQiH,OAAxB,yBC4CPC,GA3CU,SAAEC,EAAkBxE,GACzC,yDAKI,aAAe,IAAD,8BACV,gBALJX,MAAQ,CACJoF,MAAO,MAGG,EAmBdC,sBAAwB,WACpB,EAAKlF,SAAS,CAACiF,MAAO,QAlBtB,EAAKE,eAAiB3E,EAAM4E,aAAaC,QAAQC,KAAI,SAAAC,GAEjD,OADA,EAAKvF,SAAS,CAACiF,MAAO,OACfM,KAGX,EAAKC,eAAiBhF,EAAM4E,aAAaK,SAASH,KAAI,SAAAI,GAAG,OAAIA,KAAK,SAAAT,GAC9D,EAAKjF,SAAS,CAACiF,MAAOA,OARhB,EALlB,mEAmBQzE,EAAM4E,aAAaC,QAAQM,MAAMxF,KAAKgF,gBACtC3E,EAAM4E,aAAaK,SAASE,MAAMxF,KAAKqF,kBApB/C,+BA6BQ,OACA,eAAC,EAAD,WACI,cAAC,GAAD,CAAOrG,KAAMgB,KAAKN,MAAMoF,MAAOhB,eAAgB9D,KAAK+E,sBAApD,SACK/E,KAAKN,MAAMoF,MAAQ9E,KAAKN,MAAMoF,MAAMW,QAAU,OAEnD,cAACZ,EAAD,eAAsB7E,KAAK1C,eAlCvC,GAAqB6C,cCLZuF,GAAiB,iBACjBC,GAAoB,oBACpBC,GAAiB,iBACjBC,GAA2B,2BAE3BC,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAuB,uBACvBC,GAAgB,gBAEhBC,GAAqB,qBACrBC,GAAuB,uBACvBC,GAAoB,oBACpBC,GAAe,eCiBfC,GAAkB,WAC3B,OAAO,SAAAC,GACHlG,EAAMmG,IAAI,qEACTC,MAAK,SAAAnB,GAhBgB,IAAC/D,EAiBnBgF,GAjBmBhF,EAiBK+D,EAASoB,KAhBlC,CACHhG,KAAMiG,GACNpF,YAAaA,QAgBZqF,OAAM,SAAA9B,GACHyB,EAZD,CACH7F,KAAMiG,UCFDE,GAAiB,SAACC,GAC3B,OAAO,SAAAP,GACHA,EAPG,CACH7F,KAAMiG,KAONtG,EAAM0G,KAAK,eAAgBD,GACtBL,MAAK,SAAAnB,GACFpD,QAAQC,IAAImD,EAASoB,MACrBH,EA3BqB,SAACS,EAAIF,GACtC,MAAO,CACHpG,KAAMiG,GACNM,QAASD,EACTF,UAAWA,GAuBMI,CAAsB5B,EAASoB,KAAKS,KAAML,OAEtDF,OAAM,SAAA9B,GACHyB,EAtBkB,SAACzB,GAC/B,MAAO,CACHpE,KAAMiG,GACN7B,MAAOA,GAmBUsC,CAAmBtC,SA6B/BuC,GAAc,WACvB,OAAO,SAAAd,GACHA,EAPG,CACH7F,KAAMiG,KAONtG,EAAMmG,IAAI,gBACTC,MAAK,SAAAnB,GACF,IAAMgC,EAAgB,GAEtB,IAAK,IAAIC,KAAOjC,EAASoB,KACrBY,EAAcE,KAAd,2BACOlC,EAASoB,KAAKa,IADrB,IAEIP,GAAIO,KAGZhB,EA9BD,CACH7F,KAAMiG,GACNc,OA4BgCH,OAE/BV,OAAM,SAAAc,GACHnB,EA3BD,CACH7F,KAAMiG,GACN7B,MAyB6B4C,SC5D/BC,G,4MACFjI,MAAQ,CACJkI,YAAY,G,EAWhBC,oBAAsB,SAACtG,GAQnB,OAPYF,OAAOC,KAAKC,GACnBC,KAAI,SAAAsG,GACD,OAAOvG,EAAYuG,MAEtBjG,QAAO,SAACkG,EAAKhG,GACV,OAAOgG,EAAMhG,EAAK,IACnB,GACM,G,EAyCjBiG,qBAAuB,WACnB,EAAKnI,SAAS,CAAC+H,YAAY,K,EAG/BK,sBAAwB,WACpB,EAAKpI,SAAS,CAAC+H,YAAY,K,EAG/BM,wBAA0B,WAWtB,EAAK5K,MAAM6K,iBACX,EAAK7K,MAAM8K,QAAQZ,KAAK,c,kEA1E5BtF,QAAQC,IAAInC,KAAK1C,OACjB0C,KAAK1C,MAAM+K,sB,+BAgFP,IAAMC,EAAY,eACXtI,KAAK1C,MAAMiL,MAElB,IAAK,IAAIhB,KAAOe,EACZA,EAAaf,GAAOe,EAAaf,IAAQ,EAI7C,IAAIpG,EAASnB,KAAK1C,MAAMwH,MACpB,mBAAGxB,MAAO,CAACkF,UAAW,UAAtB,sDACG,cAACC,GAAD,IACHC,EAAe,KA0BnB,OAxBG1I,KAAK1C,MAAMiL,OACVpH,EACI,eAAC,EAAD,WACI,cAACiB,EAAD,CAAQb,YAAavB,KAAK1C,MAAMiL,OAC5B,cAACvF,GAAD,CACII,MAAOpD,KAAK1C,MAAMqL,kBAClBtF,SAAUrD,KAAK1C,MAAMsL,oBACrBjG,SAAU2F,EACVrF,MAAOjD,KAAK1C,MAAMuL,WAClBpF,cAAezD,KAAK6H,oBAAoB7H,KAAK1C,MAAMiL,MACnD7E,SAAU1D,KAAKgI,0BAG3BU,EAAe,cAAC,GAAD,CACXnH,YAAavB,KAAK1C,MAAMiL,KACxB/D,kBAAmBxE,KAAKiI,sBACxBxD,kBAAmBzE,KAAKkI,wBACxBjF,MAAOjD,KAAK1C,MAAMuL,cAQ1B,eAAC,EAAD,WACI,cAAC,GAAD,CAAO7J,KAAMgB,KAAKN,MAAMkI,WAAY9D,eAAgB9D,KAAKiI,sBAAzD,SACKS,IAEJvH,S,GAnIWhB,aA2Jb2I,gBAlBS,SAAApJ,GACpB,MAAO,CACH6I,KAAM7I,EAAMqJ,cAAcxH,YAC1BsH,WAAYnJ,EAAMqJ,cAAcF,WAChC/D,MAAOpF,EAAMqJ,cAAcjE,MAC3BkE,UAAWtJ,EAAMuJ,MAAMD,cAIJ,SAAAzC,GACvB,MAAO,CACHoC,kBAAmB,SAACO,GAAD,OAAa3C,EFjK7B,CACH7F,KAAMiG,GACNwC,eE+J+DD,KAC/DN,oBAAqB,SAACM,GAAD,OAAa3C,EF5J/B,CACH7F,KAAMiG,GACNwC,eE0JoED,KACpEb,kBAAmB,kBAAM9B,EAAS6C,OAClCjB,eAAgB,kBAAM5B,EDlInB,CACH7F,KAAMiG,SCqICmC,CAA6ClE,GAAiB+C,GAAetH,I,4BCvJ7EgJ,GAjBS,SAAC/L,GACrB,OACI,sBAAKG,UAAWC,KAAQ4L,gBAAxB,UACI,2DACA,qBAAKhG,MAAO,CAACiG,MAAO,OAAQC,OAAQ,QAApC,SACI,cAACpH,EAAD,CAAQb,YAAajE,EAAMiE,gBAE/B,cAAC2C,GAAD,CACIC,QAAQ,SACRzF,QAASpB,EAAMmM,kBAFnB,oBAGA,cAACvF,GAAD,CACIC,QAAQ,UACRzF,QAASpB,EAAMoM,kBAFnB,0B,wCCwCGC,GApDD,SAACrM,GACX,IAAIsM,EAAe,KACbC,EAAe,CAACnM,KAAQoM,cAE1BC,EAAe,KAMnB,OALGzM,EAAM0M,SAAW1M,EAAM2M,gBAAkB3M,EAAM4M,UAC9CL,EAAarC,KAAK9J,KAAQyM,SAC1BJ,EAAe,mBAAGtM,UAAWC,KAAQ0M,aAAtB,SAAqC9M,EAAM+M,cAGvD/M,EAAMgN,aACT,IAAM,QACFV,EAAe,+CACXnM,UAAWoM,EAAarK,KAAK,MACzBlC,EAAMiN,eAFC,IAGXC,MAAOlN,EAAMkN,MACbC,SAAUnN,EAAMoN,WACpB,MACJ,IAAM,WACFd,EAAe,kDACXnM,UAAWoM,EAAarK,KAAK,MACzBlC,EAAMiN,eAFC,IAGXC,MAAOlN,EAAMkN,MACbC,SAAUnN,EAAMoN,WACpB,MACJ,IAAM,SACFd,EACI,wBACInM,UAAWoM,EAAarK,KAAK,KAC7BgL,MAAOlN,EAAMkN,MACbC,SAAUnN,EAAMoN,QAHpB,SAIKpN,EAAMiN,cAAcI,QAAQnJ,KAAI,SAAAoJ,GAC7B,OAAO,iCAA4BA,EAAOC,cAAtBD,EAAOJ,YAIvC,MACJ,QACIZ,EAAe,+CACXnM,UAAWoM,EAAarK,KAAK,MACzBlC,EAAMiN,eAFC,IAGXC,MAAOlN,EAAMkN,SAGzB,OACI,sBAAK/M,UAAWC,KAAQoN,MAAxB,UACI,uBAAOrN,UAAWC,KAAQ6E,MAA1B,SAAkCjF,EAAMkF,QACvCoH,EACAG,MCvCPgB,G,4MACFrL,MAAQ,CACJsL,UAAW,CACP7D,KAAM,CACFmD,YAAa,QACbC,cAAe,CACX7J,KAAM,OACNuK,YAAa,gBAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPlB,SAAS,GAEbmB,QAAS,CACLf,YAAa,QACbC,cAAe,CACX7J,KAAM,OACNuK,YAAa,WAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPlB,SAAS,GAEboB,OAAQ,CACJhB,YAAa,QACbC,cAAe,CACX7J,KAAM,OACNuK,YAAa,UAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPlB,SAAS,GAEbqB,QAAS,CACLjB,YAAa,QACbC,cAAe,CACX7J,KAAM,OACNuK,YAAa,YAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,EACVK,UAAW,EACXC,UAAW,GAEfL,OAAO,EACPlB,SAAS,EACTH,aAAc,oCAElB2B,QAAS,CACLpB,YAAa,QACbC,cAAe,CACX7J,KAAM,OACNuK,YAAa,WAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPlB,SAAS,GAEbyB,MAAO,CACHrB,YAAa,QACbC,cAAe,CACX7J,KAAM,QACNuK,YAAa,SAEjBT,MAAO,GACPU,WAAY,CACRC,UAAU,GAEdC,OAAO,EACPlB,SAAS,GAEb0B,eAAgB,CACZtB,YAAa,SACbC,cAAe,CACXI,QAAQ,CACJ,CAACH,MAAO,UAAWK,aAAc,WACjC,CAACL,MAAO,WAAYK,aAAc,cAG1CK,WAAY,GACZV,MAAO,UACPY,OAAO,IAGfS,aAAa,G,EAGjBC,aAAe,SAACC,GACZA,EAAMC,iBAEN,IAAMC,EAAW,GAEXC,GAAU,IAAIC,MAAOC,iBAC3B,IAAK,IAAIC,KAAyB,EAAK3M,MAAMsL,UACzCiB,EAASI,GAAyB,EAAK3M,MAAMsL,UAAUqB,GAAuB7B,MAElF,IAAMvB,EAAQ,CACV1H,YAAa,EAAKjE,MAAMiL,KACxBtF,MAAO,EAAK3F,MAAMuL,WAClB/B,UAAWmF,EACXK,UAAWJ,GAGf,EAAK5O,MAAMiP,cAActD,I,EAqB7BuD,oBAAsB,SAACT,EAAOU,GAC1B,IAAMC,EAAc,eACb,EAAKhN,MAAMsL,WAEZ2B,EAAgB,eACfD,EAAeD,IAGtBE,EAAiBnC,MAAQuB,EAAMa,OAAOpC,MACtCmC,EAAiBvB,MAAQ,EAAKyB,cAAcF,EAAiBnC,MAAOmC,EAAiBzB,YACrFyB,EAAiBzC,SAAU,EAC3BwC,EAAeD,GAAmBE,EAElC,IAAId,GAAc,EAClB,IAAK,IAAIY,KAAmBC,EACxBb,EAAca,EAAeD,GAAiBrB,OAASS,EAG3D3J,QAAQC,IAAI0J,GAEZ,EAAKhM,SAAS,CACVmL,UAAW0B,EACXb,YAAaA,K,4DAxCPrB,EAAOsC,GACjB,IAAIC,GAAU,EAcd,OAZID,EAAM3B,WACN4B,EAA2B,KAAjBvC,EAAMwC,QAAiBD,GAGjCD,EAAMtB,YACNuB,EAAUvC,EAAMvI,QAAU6K,EAAMtB,WAAauB,GAG7CD,EAAMrB,YACNsB,EAAUvC,EAAMvI,QAAU6K,EAAMrB,WAAasB,GAG1CA,I,+BA6BD,IAAD,OACCE,EAAoB,GAC1B,IAAK,IAAI1F,KAAOvH,KAAKN,MAAMsL,UACvBiC,EAAkBzF,KAAK,CACnBR,GAAIO,EACJ2F,OAAQlN,KAAKN,MAAMsL,UAAUzD,KAIrC,IAAI4F,EACA,uBAAMC,SAAUpN,KAAK8L,aAArB,UACKmB,EAAkBzL,KAAI,SAAA6L,GAAW,OAC9B,cAACvC,GAAD,CAEIR,YAAa+C,EAAYH,OAAO5C,YAChCC,cAAe8C,EAAYH,OAAO3C,cAClCC,MAAO6C,EAAYH,OAAO1C,MAC1BR,SAAUqD,EAAYH,OAAO9B,MAC7BnB,eAAgBoD,EAAYH,OAAOhC,WACnChB,QAASmD,EAAYH,OAAOhD,QAC5BG,WAAYgD,EAAYH,OAAOnD,aAC/BW,QAAS,SAACqB,GAAD,OAAW,EAAKS,oBAAoBT,EAAOsB,EAAYrG,MAR3DqG,EAAYrG,OAUzB,cAAC9C,GAAD,CACIC,QAAQ,UACRxB,UAAW3C,KAAKN,MAAMmM,YAF1B,sBASR,OAJI7L,KAAK1C,MAAMgQ,UACXH,EAAO,cAAC1E,GAAD,KAIP,sBAAKhL,UAAWC,KAAQqN,YAAxB,UACI,0DACCoC,S,GAtMShN,aA2NX2I,gBARS,SAAApJ,GACpB,MAAO,CACH6I,KAAM7I,EAAMqJ,cAAcxH,YAC1BsH,WAAYnJ,EAAMqJ,cAAcF,WAChCyE,QAAS5N,EAAMuJ,MAAMqE,YAVF,SAAA/G,GACvB,MAAO,CACHgG,cAAe,SAACzF,GAAD,OAAeP,EAAS6C,GAAuBtC,QAYvDgC,CAA6ClE,GAAiBmG,GAAa1K,IChOpFkN,G,4MAkBF9D,kBAAoB,WAChB,EAAKnM,MAAM8K,QAAQoF,U,EAEvB9D,kBAAoB,WAChB,EAAKpM,MAAM8K,QAAQqF,QAAQ,2B,uDAI3B,IAAIC,EAAU,cAAC,KAAD,CAAU/P,GAAG,MAC3B,GAAIqC,KAAK1C,MAAMiL,KAAM,CACjB,IAAMoF,EAAoB3N,KAAK1C,MAAM0L,UAAY,cAAC,KAAD,CAAUrL,GAAG,MAAS,KACvE+P,EACI,gCACKC,EACD,cAACrE,GAAD,CACI/H,YAAavB,KAAK1C,MAAMiL,KACxBkB,kBAAmBzJ,KAAKyJ,kBACxBC,kBAAmB1J,KAAK0J,oBAC5B,cAAC,KAAD,CAAOkE,KAAM5N,KAAK1C,MAAMuQ,MAAMC,IAAM,gBAChCC,UAAWhD,QAQ3B,OAAO2C,M,GA7CQvN,aA0DR2I,gBATS,SAAApJ,GACpB,MAAO,CACH6I,KAAM7I,EAAMqJ,cAAcxH,YAC1ByH,UAAWtJ,EAAMuJ,MAAMD,aAMhBF,CAAyByE,I,oBCnBzBtE,GAzCD,SAAC3L,GACX,IAAMiE,EAAc,GAEpB,IAAK,IAAI4H,KAAkB7L,EAAMiE,YAC7BA,EAAYiG,KAAK,CACbL,KAAMgC,EACN6E,OAAQ1Q,EAAMiE,YAAY4H,KAKlC,IAAM8E,EAAmB1M,EAAYC,KAAI,SAAA0M,GACrC,OAAO,uBACH5K,MAAO,CACH6K,QAAS,eACTC,cAAe,aACf5E,OAAQ,QACR6E,OAAQ,iBACRC,QAAS,OANV,UASEJ,EAAG/G,KATL,KASa+G,EAAGF,OAThB,MAQEE,EAAG/G,SAKhB,OACI,sBAAK1J,UAAWC,KAAQ6Q,MAAxB,UACI,8CAAiBN,KACjB,wCAAU,0CAAaO,OAAOC,WAAWnR,EAAM2F,OAAOC,QAAQ,SAC9D,6CAAe,sBAAMzF,UAAWC,KAAQyO,KAAzB,SAAgC7O,EAAMoR,UAErD,8BACI,cAACxK,GAAD,CACIC,QAAQ,SACRzF,QAASpB,EAAMqR,OAFnB,0BC9BVC,G,kLAGE5O,KAAK1C,MAAMuR,kB,+BAGL,IAAD,OACDpH,EAAS,cAACgB,GAAD,IAab,OAZKzI,KAAK1C,MAAMgQ,UACZ7F,EACIzH,KAAK1C,MAAMmK,OAAOjG,KAAI,SAAAyH,GAAK,OACvB,cAACsF,GAAD,CACAhN,YAAa0H,EAAM1H,YACnB0B,MAAOgG,EAAMhG,MACbyL,KAAMzF,EAAMqD,UACZqC,OAAQ,kBAAM,EAAKrR,MAAMwR,eAAe7F,EAAMjC,MAJlCiC,EAAMjC,OAKnB+H,WAGX7M,QAAQC,IAAInC,KAAK1C,MAAMmK,QAEnB,8BACKA,Q,GAtBItH,aA2CN2I,gBAdS,SAAApJ,GACpB,MAAO,CACH+H,OAAQ/H,EAAMuJ,MAAMxB,OACpB6F,QAAS5N,EAAMuJ,MAAMqE,YAIF,SAAA/G,GACvB,MAAO,CACHsI,cAAe,kBAAMtI,EAAS6C,OAC9B0F,eAAgB,SAAC9H,GAAD,OAAQT,EPqCL,SAACS,GACxB,MAAO,CACHtG,KAAMiG,GACNM,QAASD,GOxCwBoC,CAAoBpC,QAI9C8B,CAA6ClE,GAAiBgK,GAAQvO,IC1BtE2O,G,uKAdX,OACE,8BACE,cAAC,EAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAOpB,KAAK,YAAYG,UAAYR,KACpC,cAAC,KAAD,CAAOK,KAAK,UAAUG,UAAYa,KAClC,cAAC,KAAD,CAAOhB,KAAK,IAAIG,UAAYpG,gB,GARtBxH,aCIH8O,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB1I,MAAK,YAAkD,IAA/C2I,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2BCLRO,GAAe,CACjBlO,YAAc,KACVsH,WAAY,EACZ/D,OAAO,GAGT4K,GAAoB,CACtBC,MAAO,GACPC,OAAQ,GACRC,KAAM,IACNC,MAAO,GA8CIC,GA3CC,WAAmC,IAAlCrQ,EAAiC,uDAAzB+P,GAAcO,EAAW,uCAC9C,OAAOA,EAAOtP,MACV,KAAKiG,GACD,OAAO,2BACAjH,GADP,IAEI6B,YAAY,2BACL7B,EAAM6B,aADF,mBAENyO,EAAO7G,eAAiBzJ,EAAM6B,YAAYyO,EAAO7G,gBAAkB,IAExEN,WAAYnJ,EAAMmJ,WAAa6G,GAAkBM,EAAO7G,kBAEhE,KAAKxC,GACD,OAAO,2BACAjH,GADP,IAEI6B,YAAY,2BACL7B,EAAM6B,aADF,mBAENyO,EAAO7G,eAAiBzJ,EAAM6B,YAAYyO,EAAO7G,gBAAkB,IAExEN,WAAYnJ,EAAMmJ,WAAa6G,GAAkBM,EAAO7G,kBAEhE,KAAKxC,GACD,OAAO,2BACAjH,GADP,IAGI6B,YAAa,CACToO,MAAOK,EAAOzO,YAAYoO,MAC1BG,MAAOE,EAAOzO,YAAYuO,MAC1BF,OAAQI,EAAOzO,YAAYqO,OAC3BC,KAAMG,EAAOzO,YAAYsO,MAE7BhH,WAAY,EACZ/D,OAAO,IAEf,KAAK6B,GACD,OAAO,2BACAjH,GADP,IAEIoF,OAAO,IAEf,QACI,OAAOpF,ICpDb+P,GAAe,CACjBhI,OAAQ,GACR6F,SAAS,EACTtE,WAAW,GA4DA+G,GAzDC,WAAmC,IAAlCrQ,EAAiC,uDAAzB+P,GAAcO,EAAW,uCAC9C,OAAOA,EAAOtP,MACV,KAAKiG,GACD,OAAO,2BACAjH,GADP,IAEIsJ,WAAW,IAGnB,KAAKrC,GACD,IAAMsJ,EAAQ,2BACPD,EAAOlJ,WADA,IAEVE,GAAIgJ,EAAO/I,UAGf,kCACOvH,GADP,IAEI4N,SAAS,EACT7F,OAAQ/H,EAAM+H,OAAOzF,OAAOiO,GAC5BjH,WAAW,IAEnB,KAAKrC,GACD,kCACOjH,GADP,IAEI4N,SAAS,IAEjB,KAAK3G,GAKL,KAAKA,GACD,OAAO,2BACAjH,GADP,IAEI4N,SAAS,IAEjB,KAAK3G,GACD,OAAO,2BACAjH,GADP,IAEI+H,OAAQuI,EAAOvI,OACf6F,SAAS,IAEjB,KAAK3G,GACD,OAAO,2BACAjH,GADP,IAEI4N,SAAS,IAEjB,KAAK3G,GACD,IAAMuJ,EAAYxQ,EAAM+H,OAAO0I,QAAO,SAAAlH,GAAK,OAAIA,EAAMjC,KAAOgJ,EAAO/I,WACnE,OAAO,2BACAvH,GADP,IAEI+H,OAAQyI,IAEhB,QACI,OAAOxQ,IChDb0Q,GAAmBC,OAAOC,sCAAwCC,KAElEC,GAAcC,aAAgB,CAClC1H,cAAe2H,GACfzH,MAAO0H,KAGHC,GAAQC,aAAYL,GAAaJ,GAAiBU,aAAgBC,QAElEC,GACJ,cAAC,IAAD,CAAUJ,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,GAAD,QAKNK,IAASC,OACP,cAAC,IAAMC,WAAP,UACGH,KAEHI,SAASC,eAAe,SAM1BpC,O","file":"static/js/main.ea4aebf0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngridient_BreadBottom__3xC0q\",\"BreadTop\":\"BurgerIngridient_BreadTop__2aQry\",\"Seeds1\":\"BurgerIngridient_Seeds1__1R38x\",\"Seeds2\":\"BurgerIngridient_Seeds2__3_DGe\",\"Meat\":\"BurgerIngridient_Meat__3sFFK\",\"Cheese\":\"BurgerIngridient_Cheese__NNmxH\",\"Salad\":\"BurgerIngridient_Salad__1KsxN\",\"Bacon\":\"BurgerIngridient_Bacon__2Gk9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__11VQR\",\"Logo\":\"SideDrawer_Logo__2GVwt\",\"Open\":\"SideDrawer_Open__3lXOK\",\"Close\":\"SideDrawer_Close__2oHEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3lNpC\",\"Label\":\"Input_Label__3tcZD\",\"InputElement\":\"Input_InputElement__1AjWr\",\"Invalid\":\"Input_Invalid__IvCls\",\"ErrorMassege\":\"Input_ErrorMassege__BIA32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1vmsB\",\"Label\":\"BuildControl_Label__lzGWe\",\"Less\":\"BuildControl_Less__uAXBv\",\"More\":\"BuildControl_More__kxkxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1m3Nj\",\"Logo\":\"Toolbar_Logo__3m224\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2oaEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3eMlP\",\"Footer\":\"Layout_Footer__2AVX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3qGe2\",\"active\":\"NavigationItem_active__3D1fM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3rbQy\",\"OrderButton\":\"BuildControls_OrderButton__1r02c\",\"enable\":\"BuildControls_enable__2h0YZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__vsKog\",\"Success\":\"Button_Success__1_GEJ\",\"Danger\":\"Button_Danger__15JOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__15rEl\",\"Date\":\"Order_Date__3W7tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3230Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__8T0PU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3UZPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__okGRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2oWXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__34BAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2kMhQ\",\"load6\":\"Spinner_load6__x6tza\",\"round\":\"Spinner_round__1dU-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__H_ilj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1Y3D9\",\"Input\":\"ContactData_Input__3qo-I\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\n\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <Link\r\n            to=\"/\">\r\n            <img src={burgerLogo} alt=\"myBurger\"/>\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            activeClassName={classes.active}\r\n            to={props.link}\r\n            exact={props.exact}>\r\n                {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\n\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        <NavigationItem link=\"/orders\" >My Orders</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div \r\n        className={classes.DrawerToggle} \r\n        onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToogle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.menuClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems/>  \r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let sideDrawerClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        sideDrawerClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.clicked}/>\r\n            <div className={sideDrawerClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, {Component} from 'react';\r\nimport classes from './Layout.module.css'\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        sideDrawerShow: false,\r\n    }\r\n\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({\r\n            sideDrawerShow: false,\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {sideDrawerShow: !prevState.sideDrawerShow}\r\n        });\r\n    }\r\n            \r\n    render() {\r\n        return(\r\n            <Aux>\r\n                <Toolbar menuClicked={this.sideDrawerToggleHandler}/>\r\n                <SideDrawer open={this.state.sideDrawerShow} clicked={this.sideDrawerCloseHandler}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n\r\n                <footer className={classes.Footer}>\r\n                    <p>Under development by cu4nt0m\r\n                        Arsalan H.\r\n                    </p>\r\n                </footer>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Layout;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burgershpear-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport classes from './BurgerIngridient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass BurgerIngridient extends Component {\r\n    render(){\r\n        let ingridient = null;\r\n    \r\n        switch( this.props.type ) {\r\n            case('bread-bottom'):\r\n                ingridient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingridient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                ingridient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case('cheese'):\r\n                ingridient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case('salad'):\r\n                ingridient = <div className={classes.Salad}></div>\r\n                break;\r\n            case('bacon'):\r\n                ingridient = <div className={classes.Bacon}></div>\r\n                break;\r\n            default:\r\n                ingridient = null;\r\n        }                       \r\n        return ingridient;\r\n    }\r\n\r\n    \r\n    \r\n};\r\n\r\nBurgerIngridient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default BurgerIngridient;","import React from 'react'\r\nimport BurgerIngridient from './BurgerIngridient/BurgerIngridient';\r\nimport classes from './Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngridients = Object.keys(props.ingridients)\r\n    .map(igKey => {\r\n        return[...Array(props.ingridients[igKey])].map((_, i) => {\r\n           return <BurgerIngridient key={igKey + i} type={igKey} />\r\n        } );\r\n    } ).reduce((arr, el) => {\r\n        return arr.concat(el);\r\n    }, []);\r\n\r\n    if (transformedIngridients.length === 0) {\r\n        transformedIngridients = <p>Please add ingredients.</p>;\r\n    }\r\n\r\n    console.log(transformedIngridients);\r\n\r\n    \r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngridient type=\"bread-top\"/>\r\n                {transformedIngridients}\r\n            <BurgerIngridient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    \r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    {label: 'Salad:', type: 'salad'},\r\n    {label: 'Bacon:', type: 'bacon'},\r\n    {label: 'Cheese:', type: 'cheese'},\r\n    {label: 'Meat:', type: 'meat'},\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p><strong>Burger Price: {props.price.toFixed(2)}$</strong></p>\r\n        {controls.map(crtl => {\r\n            return <BuildControl \r\n                key={crtl.label} \r\n                label={crtl.label}\r\n                added={() => props.addIg(crtl.type)}\r\n                removed={() => props.removeIg(crtl.type)}\r\n                disabled={props.disabled[crtl.type]}/>\r\n            })\r\n        }\r\n        <button \r\n            style={{marginTop: '15px'}}\r\n            className={classes.OrderButton} \r\n            disabled={!props.orderDisabled}\r\n            onClick={props.orderBtn}>\r\n                PROCEED!\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nclass Modal extends Component {\r\n    \r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.purchaseCancel}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1': '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render() {\r\n        const ingridients = Object.keys(this.props.ingridients)\r\n        .map(igKey => {\r\n            return <li key={igKey}>\r\n                        {igKey.charAt(0).toUpperCase() + igKey.slice(1)}\r\n                            : {this.props.ingridients[igKey]}\r\n                    </li>\r\n        });\r\n        return(\r\n            <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your burger includes the following ingredients:</p>\r\n            <ul>\r\n                {ingridients}\r\n            </ul>\r\n            <p><strong>Total Price: {this.props.price.toFixed(2)}$</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" \r\n                    clicked={this.props.purchaseCancelled}>\r\n                        Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\"\r\n                    clicked={this.props.purchaseContinued}>\r\n                        Continue\r\n            </Button>\r\n        </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => <div className={classes.Loader}>Loading...</div>\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = ( WrapperComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null,\r\n        }\r\n//axios interceptors init---------------------------------\r\n        constructor() {\r\n            super();\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n//following lifecycle is for cleaning up the created interceptors for wrapped component when we wont use\r\n//it anymore, so me 'unmount' them.\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n//end of axios interceptors finish---------------------------\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render() {\r\n            return(\r\n            <Aux>\r\n                <Modal show={this.state.error} purchaseCancel={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrapperComponent {...this.props} />\r\n            </Aux>\r\n            );\r\n        }\r\n    } \r\n};\r\n\r\n\r\nexport default withErrorHandler;","export const ADD_INGRIDIENT = 'ADD_INGRIDIENT';\r\nexport const REMOVE_INGRIDIENT = 'REMOVE_INGRIDIENT';\r\nexport const SET_INGRIDIENT = 'SET_INGRIDIENT';\r\nexport const FETCH_INGRIDIENTS_FAILED = 'FETCH_INGRIDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../hoc/axios-orders'; //created instance of axios\r\n\r\n\r\nexport const addIngridient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGRIDIENT,\r\n        ingridientName: name\r\n    }\r\n}\r\nexport const removeIngridient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGRIDIENT,\r\n        ingridientName: name\r\n    }\r\n}\r\n\r\nexport const setIngridients = (ingridients) => {\r\n    return {\r\n        type: actionTypes.SET_INGRIDIENT,\r\n        ingridients: ingridients\r\n    }\r\n}\r\n\r\nexport const fetchIngridientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGRIDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngridients = () => {\r\n    return dispatch => {\r\n        axios.get('https://burgershpear-default-rtdb.firebaseio.com/ingridients.json')\r\n        .then(response => {\r\n            dispatch(setIngridients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngridientsFailed());\r\n        });\r\n    }\r\n}","import axios from '../../hoc/axios-orders'; //created instance of axios\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json', orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT,\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    }\r\n}\r\n\r\nexport const fetchOrders = () => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        axios.get('/orders.json')\r\n        .then(response => {\r\n            const fetchedOrders = [];\r\n            \r\n            for (let key in response.data){\r\n                fetchedOrders.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchOrdersFail(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteOrder = (id) => {\r\n    return {\r\n        type: actionTypes.DELETE_ORDER,\r\n        orderId: id\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../hoc/axios-orders'; //created instance of axios\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n//a good place to fetch data(axios) \r\n//is inside the componentDidMount() lifecycle.\r\n\r\n\r\n//Initializations\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false,\r\n        // loading: false,\r\n        // error: false\r\n    }\r\n\r\ncomponentDidMount() {\r\n    console.log(this.props);\r\n    this.props.onInitIngridients();\r\n}\r\n\r\n//methods----------------\r\n    updatePurchaseState = (ingridients) => {\r\n        const sum = Object.keys(ingridients)\r\n            .map(igkey => {\r\n                return ingridients[igkey];\r\n            })\r\n            .reduce((sum, el) =>{\r\n                return sum + el > 0;\r\n            }, 0);\r\n        return sum > 0;\r\n    };\r\n\r\n    // addIngridientHandler = (type) => {\r\n    //     const oldCount = this.state.ingridients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngridients = {\r\n    //         ...this.state.ingridients\r\n    //     };\r\n    //     updatedIngridients[type] = updatedCount;\r\n    //     const priceAddition = INGRIDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({\r\n    //         ingridients: updatedIngridients,\r\n    //         totalPrice: newPrice,\r\n    //     })\r\n    //     this.updatePurchaseState(updatedIngridients);\r\n    // };\r\n\r\n    // removeIngridient = (type) => {\r\n    //     const oldCount = this.state.ingridients[type];\r\n    //     if (oldCount <= 0){\r\n    //         return;\r\n    //     };\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngridients = {\r\n    //         ...this.state.ingridients\r\n    //     };\r\n    //     updatedIngridients[type] = updatedCount;\r\n\r\n    //     const priceDeduction = INGRIDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({\r\n    //         ingridients: updatedIngridients,\r\n    //         totalPrice: newPrice,\r\n    //     })\r\n    //     this.updatePurchaseState(updatedIngridients);\r\n    // };\r\n\r\n    orderPurchaseHandler = () => {\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert('You are going well!');\r\n\r\n        // const queryParams = [];\r\n        // for (let i in this.state.ingridients) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingridients[i]));\r\n        //     //We loop our ingre dients in queryParams as ['bacon=0','meat=1',...] \r\n        // }\r\n        // queryParams.push('price='+ this.props.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        //join the array elements together with an '&' between, so we get sth like : 'bacon=0&meat=1...'\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n        }\r\n\r\n//end of methods-----------------------\r\n\r\n//Render section-=-=-=-=-=-=-=-=-=-=-=-=-\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        };\r\n        \r\n    //checking till ingredients get request finishes then renders\r\n        let burger = this.props.error ? \r\n            <p style={{textAlign: 'center'}}>Ingredients can not load. Network error!</p>\r\n             : <Spinner />;\r\n        let orderSummary = null;\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingridients={this.props.ings}/>\r\n                        <BuildControls \r\n                            addIg={this.props.onIngridientAdded}\r\n                            removeIg={this.props.onIngridientRemoved}\r\n                            disabled={disabledInfo}\r\n                            price={this.props.totalPrice}\r\n                            orderDisabled={this.updatePurchaseState(this.props.ings)}\r\n                            orderBtn={this.orderPurchaseHandler}/>\r\n                </Aux>\r\n                );\r\n                orderSummary = <OrderSummary \r\n                    ingridients={this.props.ings}\r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}\r\n                    price={this.props.totalPrice}/>;\r\n\r\n            }\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner />;\r\n        // }\r\n//end of Render section -=-=-=-=-=-=--=-=-=-=-=\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} purchaseCancel={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingridients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngridientAdded: (ingName) => dispatch(actions.addIngridient(ingName)),\r\n        onIngridientRemoved: (ingName) => dispatch(actions.removeIngridient(ingName)),\r\n        onInitIngridients: () => dispatch(actions.initIngridients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import React from 'react';\r\nimport classes from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>Hope we get fat together!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingridients={props.ingridients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    let errorMassege = null;\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        errorMassege = <p className={classes.ErrorMassege}>{props.errMassege}</p>;\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => {\r\n                        return <option key={option.value}>{option.displayValue}</option>;\r\n                    })}\r\n                </select>\r\n                );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}/>\r\n            break;\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {errorMassege}\r\n        </div>\r\n        )};\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './ContactData.module.css';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../hoc/axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            address: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                errorMassege: \"* Please enter a valid Zip Code.\"\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options:[\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'},\r\n                    ]\r\n                },\r\n                validation: {},\r\n                value: 'fastest',\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n//everything is handled in the state, we just bind them to some consts and post them to database with the following function.\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const formData = {};\r\n        //timeNow holds time of the submission moment and we post it to to db and we get it in my orders page :) \r\n        const timeNow = new Date().toLocaleString();\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingridients: this.props.ings,\r\n            price: this.props.totalPrice,\r\n            orderData: formData,\r\n            orderDate: timeNow\r\n        };\r\n\r\n        this.props.onOrderBurger(order);\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const cloneOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const cloneElementForm = {\r\n            ...cloneOrderForm[inputIdentifier]\r\n        }\r\n\r\n        cloneElementForm.value = event.target.value;\r\n        cloneElementForm.valid = this.checkValidity(cloneElementForm.value, cloneElementForm.validation)\r\n        cloneElementForm.touched = true;\r\n        cloneOrderForm[inputIdentifier] = cloneElementForm;\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in cloneOrderForm) {\r\n            formIsValid = cloneOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        console.log(formIsValid);\r\n\r\n        this.setState({\r\n            orderForm: cloneOrderForm,\r\n            formIsValid: formIsValid\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id} \r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        errMassege={formElement.config.errorMassege}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                ))}\r\n                <Button \r\n                    btnType=\"Success\"\r\n                    disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>);\r\n\r\n        if (this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data:</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingridients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    // componentWillMount() {\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingridients = {};\r\n    //     let price = 0;\r\n    //     for (let param of query.entries()) {\r\n    //         if (param[0] === 'price'){\r\n    //             price = param[1];\r\n    //         }\r\n    //         else {\r\n    //             ingridients[param[0]] = +param[1];\r\n    //         }\r\n    //     }\r\n    //     this.setState({ingridients: ingridients, totalPrice: price});\r\n    // }\r\n\r\n\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinued = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingridients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelled}\r\n                        checkoutContinued={this.checkoutContinued}/>\r\n                    <Route path={this.props.match.url + '/contact-data'}\r\n                        component={ContactData} \r\n                        // render={(props) => <ContactData \r\n                        //     ingridients= {this.props.ings} \r\n                        //     price={this.props.totalPrice}\r\n                        //     {...props}/>}\r\n                        />\r\n                </div>);\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingridients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst order = (props) => {\r\n    const ingridients = [];\r\n\r\n    for (let ingridientName in props.ingridients){\r\n        ingridients.push({\r\n            name: ingridientName,\r\n            amount: props.ingridients[ingridientName]\r\n        });\r\n\r\n    }\r\n\r\n    const ingridientOutput = ingridients.map(ig => {\r\n        return <span\r\n            style={{\r\n                display: 'inline-block',\r\n                textTransform: 'capitalize',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }} \r\n            key={ig.name}>\r\n                {ig.name} ({ig.amount})</span>\r\n            \r\n    });\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingridientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n            <p>Order date: <span className={classes.Date}>{props.date}</span></p>\r\n            {/* added date of now by me */}\r\n            <div>\r\n                <Button \r\n                    btnType=\"Danger\"\r\n                    clicked={props.delete}>Delete</Button>\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../hoc/axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Order from '../../components/Order/Order';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders();\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = \r\n                this.props.orders.map(order => (\r\n                    <Order key={order.id}\r\n                    ingridients={order.ingridients}\r\n                    price={order.price}\r\n                    date={order.orderDate}\r\n                    delete={() => this.props.onDeleteOrders(order.id)}/>\r\n                )).reverse()\r\n            \r\n        }\r\n        console.log(this.props.orders);\r\n        return(\r\n            <div>\r\n                {orders}\r\n                {/* reverse added to reverse the order in my orders, may change later */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: () => dispatch(actions.fetchOrders()),\r\n        onDeleteOrders: (id) => dispatch(actions.deleteOrder(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import React, {Component} from 'react';\nimport Layout from '../hoc/Layout/Layout';\nimport BurgerBuilder from '../containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './Checkout/Checkout';\nimport Orders from './Orders/Orders';\nimport { Route, Switch } from 'react-router-dom';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component= {Checkout} />\n            <Route path=\"/orders\" component= {Orders} />\n            <Route path=\"/\" component= {BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingridients : null,\r\n        totalPrice: 4, \r\n        error: false\r\n}\r\n\r\nconst INGRIDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.5,\r\n    bacon: 2,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    ...state.ingridients,\r\n                    [action.ingridientName]: state.ingridients[action.ingridientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGRIDIENT_PRICES[action.ingridientName]\r\n            }\r\n        case actionTypes.REMOVE_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    ...state.ingridients,\r\n                    [action.ingridientName]: state.ingridients[action.ingridientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGRIDIENT_PRICES[action.ingridientName]\r\n            }\r\n        case actionTypes.SET_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                //ingridients: action.ingridients,\r\n                ingridients: {\r\n                    salad: action.ingridients.salad,\r\n                    bacon: action.ingridients.bacon,\r\n                    cheese: action.ingridients.cheese,\r\n                    meat: action.ingridients.meat\r\n                },\r\n                totalPrice: 4,\r\n                error: false\r\n            };\r\n        case actionTypes.FETCH_INGRIDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId,\r\n                \r\n            };\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                orders: state.orders.concat(newOrder),\r\n                purchased: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        case actionTypes.DELETE_ORDER:\r\n            const newOrders = state.orders.filter(order => order.id !== action.orderId);\r\n            return {\r\n                ...state,\r\n                orders: newOrders\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\n\r\n//redux devtools config:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}