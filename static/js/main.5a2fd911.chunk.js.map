{"version":3,"sources":["components/Burger/BurgerIngridient/BurgerIngridient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/UI/Input/Input.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/Toolbar/Toolbar.module.css","hoc/Layout/Layout.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Order/Order.module.css","components/Logo/Logo.module.css","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToogle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","containers/Auth/Auth.module.css","hoc/Auxiliary/Auxiliary.js","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToogle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","hoc/axios-orders.js","components/Burger/BurgerIngridient/BurgerIngridient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/actionTypes.js","store/actions/burgerBurger.js","store/actions/order.js","store/actions/auth.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","components/Order/Order.js","containers/Orders/Orders.js","components/Navigation/NavigationItems/NavigationItem/Instagram.js","containers/App.js","reportWebVitals.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","aux","props","children","Logo","className","classes","to","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","link","exact","navigationItems","NavigationItems","isAuthenticated","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","menuClicked","DesktopOnly","isAuth","backdrop","show","Backdrop","sideDrawer","sideDrawerClasses","SideDrawer","Close","open","Open","join","Layout","state","sideDrawerShow","sideDrawerCloseHandler","setState","sideDrawerToggleHandler","prevState","this","Content","Footer","Component","connect","auth","token","instance","axios","create","baseURL","BurgerIngridient","ingridient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","burger","transformedIngridients","Object","keys","ingridients","map","igKey","Array","_","i","reduce","arr","el","concat","length","console","log","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","crtl","addIg","removeIg","style","marginTop","OrderButton","orderDisabled","orderBtn","Modal","nextProps","nextState","purchaseCancel","transform","opacity","button","Button","btnType","OrderSummary","charAt","toUpperCase","slice","purchaseCancelled","purchaseContinued","spinner","Loader","withErrorHandler","WrapperComponent","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","ADD_INGRIDIENT","REMOVE_INGRIDIENT","SET_INGRIDIENT","FETCH_INGRIDIENTS_FAILED","PURCHASE_BURGER_START","PURCHASE_BURGER_SUCCESS","PURCHASE_BURGER_FAIL","PURCHASE_INIT","FETCH_ORDERS_START","FETCH_ORDERS_SUCCESS","FETCH_ORDERS_FAIL","DELETE_ORDER","AUTH_START","AUTH_SUCCESS","AUTH_FAIL","AUTH_LOGOUT","SET_AUTH_REDIRECT_PATH","initIngridients","dispatch","get","then","data","actionTypes","catch","purchaseBurger","orderData","post","id","orderId","purchaseBurgerSuccess","name","purchaseBurgerFail","fetchOrders","userId","queryParams","fetchedOrders","key","push","orders","err","authSuccess","idToken","logout","localStorage","removeItem","checkAuthTimeout","expirationTime","setTimeout","email","password","isSignup","authData","returnSecureToken","url","Axios","expirationDate","Date","getTime","expiresIn","setItem","localId","setAuthRedirectPath","path","BurgerBuilder","purchasing","updatePurchaseState","igkey","sum","orderPurchaseHandler","onSetAuthRedirectPath","history","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","onInitIngridients","disabledInfo","ings","textAlign","Spinner","orderSummary","onIngridientAdded","onIngridientRemoved","totalPrice","burgerBuilder","purchased","order","ingName","ingridientName","actions","checkoutSummary","CheckoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","errorMassege","invalid","shouldValidate","touched","Invalid","ErrorMassege","errMassege","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","placeholder","validation","required","valid","address","street","zipcode","minLength","maxLength","country","isEmail","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","timeNow","toLocaleString","formElementIdentifier","orderDate","onOrderBurger","inputChangedHandler","inputIdentifier","cloneOrderForm","cloneElementForm","target","checkValidity","rules","isValid","trim","test","formElementsArray","config","form","onSubmit","formElement","loading","Checkout","goBack","replace","summary","purchasedRedirect","match","component","Auth","controlName","updatedControls","submitHandler","onAuth","swithAuthModeHandler","buildingBurger","authRedirectPath","errorMessage","authRedirect","building","Logout","onLogout","amount","ingridientOutput","ig","display","textTransform","border","padding","Order","Number","parseFloat","date","delete","Orders","onFetchOrders","onDeleteOrders","reverse","Instagram","useEffect","window","location","href","App","onTryAutoSignup","routes","getItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","INGRIDIENT_PRICES","salad","cheese","meat","bacon","reducer","action","newOrder","newOrders","filter","authStart","authFail","authLogout","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a2fd911.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngridient_BreadBottom__3xC0q\",\"BreadTop\":\"BurgerIngridient_BreadTop__2aQry\",\"Seeds1\":\"BurgerIngridient_Seeds1__1R38x\",\"Seeds2\":\"BurgerIngridient_Seeds2__3_DGe\",\"Meat\":\"BurgerIngridient_Meat__3sFFK\",\"Cheese\":\"BurgerIngridient_Cheese__NNmxH\",\"Salad\":\"BurgerIngridient_Salad__1KsxN\",\"Bacon\":\"BurgerIngridient_Bacon__2Gk9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__11VQR\",\"Logo\":\"SideDrawer_Logo__2GVwt\",\"Open\":\"SideDrawer_Open__3lXOK\",\"Close\":\"SideDrawer_Close__2oHEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3lNpC\",\"Label\":\"Input_Label__3tcZD\",\"InputElement\":\"Input_InputElement__1AjWr\",\"Invalid\":\"Input_Invalid__IvCls\",\"ErrorMassege\":\"Input_ErrorMassege__BIA32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__1vmsB\",\"Label\":\"BuildControl_Label__lzGWe\",\"Less\":\"BuildControl_Less__uAXBv\",\"More\":\"BuildControl_More__kxkxH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__1m3Nj\",\"Logo\":\"Toolbar_Logo__3m224\",\"DesktopOnly\":\"Toolbar_DesktopOnly__2oaEG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3eMlP\",\"Footer\":\"Layout_Footer__2AVX_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__3qGe2\",\"active\":\"NavigationItem_active__3D1fM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3rbQy\",\"OrderButton\":\"BuildControls_OrderButton__1r02c\",\"enable\":\"BuildControls_enable__2h0YZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__vsKog\",\"Success\":\"Button_Success__1_GEJ\",\"Danger\":\"Button_Danger__15JOE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__15rEl\",\"Date\":\"Order_Date__3W7tq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__3230Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__8T0PU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3UZPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__okGRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__2oWXP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__34BAU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__2kMhQ\",\"load6\":\"Spinner_load6__x6tza\",\"round\":\"Spinner_round__1dU-T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__H_ilj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__1Y3D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__W38pu\",\"Input\":\"Auth_Input__JdQZ-\"};","const aux = (props) => props.children;\r\n\r\nexport default aux;","export default __webpack_public_path__ + \"static/media/burger-logo.ec69c7f6.png\";","import React from 'react';\r\n\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Logo = (props) => (\r\n    <div className={classes.Logo}>\r\n        <Link\r\n            to=\"/\">\r\n            <img src={burgerLogo} alt=\"myBurger\"/>\r\n        </Link>\r\n    </div>\r\n);\r\n\r\nexport default Logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst navigationItem = (props) => (\r\n    <li className={classes.NavigationItem}>\r\n        <NavLink\r\n            activeClassName={classes.active}\r\n            to={props.link}\r\n            exact={props.exact}>\r\n                {props.children}\r\n        </NavLink>\r\n    </li>\r\n);\r\n\r\nexport default navigationItem;","import React from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\n\r\nconst navigationItems = (props) => (\r\n    <ul className={classes.NavigationItems}>\r\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\r\n        {props.isAuthenticated ? <NavigationItem link=\"/orders\" >My Orders</NavigationItem> : null}\r\n        {props.isAuthenticated \r\n            ?   <NavigationItem link=\"/logout\" >Logout</NavigationItem>\r\n            :   <NavigationItem link=\"/auth\" >Sign in</NavigationItem>}\r\n        <NavigationItem link=\"/contact\">Contact</NavigationItem>\r\n    </ul>\r\n);\r\n\r\nexport default navigationItems;\r\n","import React from 'react';\r\nimport classes from './DrawerToggle.module.css';\r\n\r\nconst drawerToggle = (props) => (\r\n    <div \r\n        className={classes.DrawerToggle} \r\n        onClick={props.clicked}>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n    </div>\r\n);\r\n\r\nexport default drawerToggle;","import React from 'react';\r\nimport classes from './Toolbar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToogle/DrawerToggle';\r\n\r\nconst toolbar = (props) => (\r\n    <header className={classes.Toolbar}>\r\n        <DrawerToggle clicked={props.menuClicked} />\r\n        <div className={classes.Logo}>\r\n            <Logo />\r\n        </div>\r\n        <nav className={classes.DesktopOnly}>\r\n            <NavigationItems isAuthenticated={props.isAuth}/>  \r\n        </nav>\r\n    </header>\r\n);\r\n\r\nexport default toolbar;","import React from 'react';\r\nimport classes from './Backdrop.module.css';\r\n\r\nconst backdrop = (props) => (\r\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\r\n);\r\n\r\nexport default backdrop;","import React from 'react';\r\nimport classes from './SideDrawer.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Backdrop from '../../UI/Backdrop/Backdrop';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\nconst sideDrawer = (props) => {\r\n    let sideDrawerClasses = [classes.SideDrawer, classes.Close];\r\n    if (props.open) {\r\n        sideDrawerClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n\r\n    return (\r\n        <Aux>\r\n            <Backdrop show={props.open} clicked={props.clicked}/>\r\n            <div className={sideDrawerClasses.join(' ')} onClick={props.clicked}>\r\n                <div className={classes.Logo}>\r\n                    <Logo />\r\n                </div>\r\n                <nav>\r\n                    <NavigationItems isAuthenticated={props.isAuth}/>\r\n                </nav>\r\n            </div>\r\n        </Aux>\r\n    );\r\n};\r\n\r\nexport default sideDrawer;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport classes from './Layout.module.css'\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\r\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\r\n\r\nclass Layout extends Component {\r\n    state = {\r\n        sideDrawerShow: false,\r\n    }\r\n\r\n    sideDrawerCloseHandler = () => {\r\n        this.setState({\r\n            sideDrawerShow: false,\r\n        })\r\n    }\r\n\r\n    sideDrawerToggleHandler = () => {\r\n        this.setState((prevState) => {\r\n            return {sideDrawerShow: !prevState.sideDrawerShow}\r\n        });\r\n    }\r\n            \r\n    render() {\r\n        return(\r\n            <Aux>\r\n                <Toolbar \r\n                    menuClicked={this.sideDrawerToggleHandler}\r\n                    isAuth={this.props.isAuthenticated}/>\r\n\r\n                <SideDrawer \r\n                    open={this.state.sideDrawerShow} clicked={this.sideDrawerCloseHandler}\r\n                    isAuth={this.props.isAuthenticated}/>\r\n                    \r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n\r\n                <footer className={classes.Footer}>\r\n                    <p>Under development by cu4nt0m\r\n                        Arsalan H.\r\n                    </p>\r\n                </footer>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isAuthenticated: state.auth.token !== null\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Layout);","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://burgershpear-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import React, {Component} from 'react';\r\nimport classes from './BurgerIngridient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass BurgerIngridient extends Component {\r\n    render(){\r\n        let ingridient = null;\r\n    \r\n        switch( this.props.type ) {\r\n            case('bread-bottom'):\r\n                ingridient = <div className={classes.BreadBottom}></div>;\r\n                break;\r\n            case('bread-top'):\r\n                ingridient = (\r\n                    <div className={classes.BreadTop}>\r\n                        <div className={classes.Seeds1}></div>\r\n                        <div className={classes.Seeds2}></div>\r\n                    </div>\r\n                );\r\n                break;\r\n            case('meat'):\r\n                ingridient = <div className={classes.Meat}></div>;\r\n                break;\r\n            case('cheese'):\r\n                ingridient = <div className={classes.Cheese}></div>\r\n                break;\r\n            case('salad'):\r\n                ingridient = <div className={classes.Salad}></div>\r\n                break;\r\n            case('bacon'):\r\n                ingridient = <div className={classes.Bacon}></div>\r\n                break;\r\n            default:\r\n                ingridient = null;\r\n        }                       \r\n        return ingridient;\r\n    }\r\n\r\n    \r\n    \r\n};\r\n\r\nBurgerIngridient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default BurgerIngridient;","import React from 'react'\r\nimport BurgerIngridient from './BurgerIngridient/BurgerIngridient';\r\nimport classes from './Burger.module.css';\r\n\r\nconst burger = (props) => {\r\n    let transformedIngridients = Object.keys(props.ingridients)\r\n    .map(igKey => {\r\n        return[...Array(props.ingridients[igKey])].map((_, i) => {\r\n           return <BurgerIngridient key={igKey + i} type={igKey} />\r\n        } );\r\n    } ).reduce((arr, el) => {\r\n        return arr.concat(el);\r\n    }, []);\r\n\r\n    if (transformedIngridients.length === 0) {\r\n        transformedIngridients = <p>Please add ingredients.</p>;\r\n    }\r\n\r\n    console.log(transformedIngridients);\r\n\r\n    \r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngridient type=\"bread-top\"/>\r\n                {transformedIngridients}\r\n            <BurgerIngridient type=\"bread-bottom\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default burger;\r\n","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst buildControl = (props) => (\r\n    \r\n    <div className={classes.BuildControl}>\r\n        <div className={classes.Label}>{props.label}</div>\r\n        <button className={classes.Less} \r\n            onClick={props.removed} \r\n            disabled={props.disabled}>Less</button>\r\n        <button \r\n            className={classes.More} \r\n            onClick={props.added}>More</button>\r\n    </div>\r\n    \r\n);\r\n\r\nexport default buildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\n\r\nconst controls = [\r\n    {label: 'Salad:', type: 'salad'},\r\n    {label: 'Bacon:', type: 'bacon'},\r\n    {label: 'Cheese:', type: 'cheese'},\r\n    {label: 'Meat:', type: 'meat'},\r\n]\r\n\r\nconst buildControls = (props) => (\r\n    <div className={classes.BuildControls}>\r\n        <p><strong>Burger Price: {props.price.toFixed(2)}$</strong></p>\r\n        {controls.map(crtl => {\r\n            return <BuildControl \r\n                key={crtl.label} \r\n                label={crtl.label}\r\n                added={() => props.addIg(crtl.type)}\r\n                removed={() => props.removeIg(crtl.type)}\r\n                disabled={props.disabled[crtl.type]}/>\r\n            })\r\n        }\r\n        <button \r\n            style={{marginTop: '15px'}}\r\n            className={classes.OrderButton} \r\n            disabled={!props.orderDisabled}\r\n            onClick={props.orderBtn}>\r\n                {props.isAuth ? \"ORDER!\" : \"SIGN UP TO CONTINUE\"}\r\n        </button>\r\n    </div>\r\n);\r\n\r\nexport default buildControls;","import React, {Component} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\n\r\n\r\nclass Modal extends Component {\r\n    \r\n    shouldComponentUpdate ( nextProps, nextState ) {\r\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Backdrop show={this.props.show} clicked={this.props.purchaseCancel}/>\r\n                <div \r\n                    className={classes.Modal}\r\n                    style={{\r\n                        transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\r\n                        opacity: this.props.show ? '1': '0'\r\n                    }}>\r\n                    {this.props.children}\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n} \r\n\r\nexport default Modal;","import React from 'react';\r\nimport classes from './Button.module.css';\r\n\r\nconst button = (props) => (\r\n    <button className={[classes.Button, classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n        disabled={props.disabled}>\r\n        {props.children}\r\n    </button>\r\n);\r\n\r\nexport default button;","import React, {Component} from 'react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nclass OrderSummary extends Component {\r\n\r\n    render() {\r\n        const ingridients = Object.keys(this.props.ingridients)\r\n        .map(igKey => {\r\n            return <li key={igKey}>\r\n                        {igKey.charAt(0).toUpperCase() + igKey.slice(1)}\r\n                            : {this.props.ingridients[igKey]}\r\n                    </li>\r\n        });\r\n        return(\r\n            <Aux>\r\n            <h3>Your Order</h3>\r\n            <p>Your burger includes the following ingredients:</p>\r\n            <ul>\r\n                {ingridients}\r\n            </ul>\r\n            <p><strong>Total Price: {this.props.price.toFixed(2)}$</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" \r\n                    clicked={this.props.purchaseCancelled}>\r\n                        Cancel\r\n            </Button>\r\n            <Button btnType=\"Success\"\r\n                    clicked={this.props.purchaseContinued}>\r\n                        Continue\r\n            </Button>\r\n        </Aux>\r\n        );\r\n    }\r\n};\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => <div className={classes.Loader}>Loading...</div>\r\n\r\nexport default spinner;","import React, { Component } from 'react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\n\r\nconst withErrorHandler = ( WrapperComponent, axios ) => {\r\n    return class extends Component {\r\n        state = {\r\n            error: null,\r\n        }\r\n//axios interceptors init---------------------------------\r\n        constructor() {\r\n            super();\r\n            this.reqInterceptor = axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n\r\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error});\r\n            });\r\n        }\r\n//following lifecycle is for cleaning up the created interceptors for wrapped component when we wont use\r\n//it anymore, so me 'unmount' them.\r\n        componentWillUnmount() {\r\n            axios.interceptors.request.eject(this.reqInterceptor);\r\n            axios.interceptors.response.eject(this.resInterceptor);\r\n        }\r\n//end of axios interceptors finish---------------------------\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null});\r\n        }\r\n\r\n        render() {\r\n            return(\r\n            <Aux>\r\n                <Modal show={this.state.error} purchaseCancel={this.errorConfirmedHandler}>\r\n                    {this.state.error ? this.state.error.message : null}\r\n                </Modal>\r\n                <WrapperComponent {...this.props} />\r\n            </Aux>\r\n            );\r\n        }\r\n    } \r\n};\r\n\r\n\r\nexport default withErrorHandler;","export const ADD_INGRIDIENT = 'ADD_INGRIDIENT';\r\nexport const REMOVE_INGRIDIENT = 'REMOVE_INGRIDIENT';\r\nexport const SET_INGRIDIENT = 'SET_INGRIDIENT';\r\nexport const FETCH_INGRIDIENTS_FAILED = 'FETCH_INGRIDIENTS_FAILED';\r\n\r\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\r\n\r\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nexport const DELETE_ORDER = 'DELETE_ORDER';\r\n\r\nexport const AUTH_START = 'AUTH_START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAIL = 'AUTH_FAIL';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nexport const SET_AUTH_REDIRECT_PATH = 'SET_AUTH_REDIRECT_PATH';","import * as actionTypes from './actionTypes';\r\nimport axios from '../../hoc/axios-orders'; //created instance of axios\r\n\r\n\r\nexport const addIngridient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGRIDIENT,\r\n        ingridientName: name\r\n    }\r\n}\r\nexport const removeIngridient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGRIDIENT,\r\n        ingridientName: name\r\n    }\r\n}\r\n\r\nexport const setIngridients = (ingridients) => {\r\n    return {\r\n        type: actionTypes.SET_INGRIDIENT,\r\n        ingridients: ingridients\r\n    }\r\n}\r\n\r\nexport const fetchIngridientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGRIDIENTS_FAILED\r\n    }\r\n}\r\n\r\nexport const initIngridients = () => {\r\n    return dispatch => {\r\n        axios.get('https://burgershpear-default-rtdb.firebaseio.com/ingridients.json')\r\n        .then(response => {\r\n            dispatch(setIngridients(response.data));\r\n        })\r\n        .catch(error => {\r\n            dispatch(fetchIngridientsFailed());\r\n        });\r\n    }\r\n}","import axios from '../../hoc/axios-orders'; //created instance of axios\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const purchaseBurgerStart = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n}\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData)\r\n            .then(response => {\r\n                console.log(response.data);\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            })\r\n            .catch(error => {\r\n                dispatch(purchaseBurgerFail(error))\r\n            });\r\n    }\r\n}\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT,\r\n    }\r\n}\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n}\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n}\r\nexport const fetchOrdersStart = () => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START,\r\n    }\r\n}\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"' ;\r\n        axios.get('/orders.json' + queryParams)\r\n        .then(response => {\r\n            const fetchedOrders = [];\r\n            \r\n            for (let key in response.data){\r\n                fetchedOrders.push({\r\n                    ...response.data[key],\r\n                    id: key\r\n                });\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        })\r\n        .catch(err => {\r\n            dispatch(fetchOrdersFail(err));\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteOrder = (id) => {\r\n    return {\r\n        type: actionTypes.DELETE_ORDER,\r\n        orderId: id\r\n    }\r\n}","import * as actionTypes from './actionTypes'\r\nimport Axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: token,\r\n        userId: userId\r\n    }\r\n}\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    localStorage.removeItem('userId');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT,\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeout = (expirationTime) => {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout());\r\n        }, expirationTime * 500); //logs out after 30 min\r\n    }\r\n}\r\n\r\nexport const auth = (email, password, isSignup) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        const authData = {\r\n            email: email,\r\n            password: password,\r\n            returnSecureToken: true\r\n        };\r\n        let url ='https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCo9DD5oRy1Qojgxnx9EXMviRK1uZ3XHvA';\r\n\r\n        if (!isSignup){\r\n            url ='https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCo9DD5oRy1Qojgxnx9EXMviRK1uZ3XHvA';\r\n        }\r\n        Axios.post(url, authData)\r\n            .then( response => {\r\n                console.log(response);\r\n                const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n                console.log(expirationDate);\r\n\r\n                localStorage.setItem('token', response.data.idToken);\r\n                localStorage.setItem('expirationDate', expirationDate);\r\n                localStorage.setItem('userId', response.data.localId);\r\n\r\n                dispatch(authSuccess(response.data.idToken, response.data.localId));\r\n                dispatch(checkAuthTimeout(response.data.expiresIn));\r\n            })\r\n            .catch( err => {\r\n                dispatch(authFail(err.response.data.error));\r\n            })\r\n    }\r\n};\r\n\r\nexport const setAuthRedirectPath = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT_PATH,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate < new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                const userId = localStorage.getItem('userId');\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../hoc/axios-orders'; //created instance of axios\r\n\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\r\nimport Modal from '../../components/UI/Modal/Modal';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as actions from '../../store/actions/index';\r\n\r\n//a good place to fetch data(axios) \r\n//is inside the componentDidMount() lifecycle.\r\n\r\n\r\n//Initializations\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing: false,\r\n        // loading: false,\r\n        // error: false\r\n    }\r\n\r\ncomponentDidMount() {\r\n    console.log(this.props);\r\n    this.props.onInitIngridients();\r\n}\r\n\r\n//methods----------------\r\n    updatePurchaseState = (ingridients) => {\r\n        const sum = Object.keys(ingridients)\r\n            .map(igkey => {\r\n                return ingridients[igkey];\r\n            })\r\n            .reduce((sum, el) =>{\r\n                return sum + el > 0;\r\n            }, 0);\r\n        return sum > 0;\r\n    };\r\n\r\n    // addIngridientHandler = (type) => {\r\n    //     const oldCount = this.state.ingridients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngridients = {\r\n    //         ...this.state.ingridients\r\n    //     };\r\n    //     updatedIngridients[type] = updatedCount;\r\n    //     const priceAddition = INGRIDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({\r\n    //         ingridients: updatedIngridients,\r\n    //         totalPrice: newPrice,\r\n    //     })\r\n    //     this.updatePurchaseState(updatedIngridients);\r\n    // };\r\n\r\n    // removeIngridient = (type) => {\r\n    //     const oldCount = this.state.ingridients[type];\r\n    //     if (oldCount <= 0){\r\n    //         return;\r\n    //     };\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngridients = {\r\n    //         ...this.state.ingridients\r\n    //     };\r\n    //     updatedIngridients[type] = updatedCount;\r\n\r\n    //     const priceDeduction = INGRIDIENT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({\r\n    //         ingridients: updatedIngridients,\r\n    //         totalPrice: newPrice,\r\n    //     })\r\n    //     this.updatePurchaseState(updatedIngridients);\r\n    // };\r\n\r\n    orderPurchaseHandler = () => {\r\n        if(this.props.isAuthenticated) {\r\n            this.setState({purchasing: true});\r\n        }\r\n        else {\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n        this.setState({purchasing: true});\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({purchasing: false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        //alert('You are going well!');\r\n\r\n        // const queryParams = [];\r\n        // for (let i in this.state.ingridients) {\r\n        //     queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingridients[i]));\r\n        //     //We loop our ingre dients in queryParams as ['bacon=0','meat=1',...] \r\n        // }\r\n        // queryParams.push('price='+ this.props.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        //join the array elements together with an '&' between, so we get sth like : 'bacon=0&meat=1...'\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n        }\r\n\r\n//end of methods-----------------------\r\n\r\n//Render section-=-=-=-=-=-=-=-=-=-=-=-=-\r\n    render() {\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        };\r\n        \r\n    //checking till ingredients get request finishes then renders\r\n        let burger = this.props.error ? \r\n            <p style={{textAlign: 'center'}}>Ingredients can not load. Network error!</p>\r\n             : <Spinner />;\r\n        let orderSummary = null;\r\n\r\n        if(this.props.ings){\r\n            burger = (\r\n                <Aux>\r\n                    <Burger ingridients={this.props.ings}/>\r\n                        <BuildControls \r\n                            addIg={this.props.onIngridientAdded}\r\n                            removeIg={this.props.onIngridientRemoved}\r\n                            disabled={disabledInfo}\r\n                            price={this.props.totalPrice}\r\n                            orderDisabled={this.updatePurchaseState(this.props.ings)}\r\n                            orderBtn={this.orderPurchaseHandler}\r\n                            isAuth={this.props.isAuthenticated}/>\r\n                </Aux>\r\n                );\r\n                orderSummary = <OrderSummary \r\n                    ingridients={this.props.ings}\r\n                    purchaseCancelled={this.purchaseCancelHandler}\r\n                    purchaseContinued={this.purchaseContinueHandler}\r\n                    price={this.props.totalPrice}/>;\r\n\r\n            }\r\n        // if (this.state.loading) {\r\n        //     orderSummary = <Spinner />;\r\n        // }\r\n//end of Render section -=-=-=-=-=-=--=-=-=-=-=\r\n        return(\r\n            <Aux>\r\n                <Modal show={this.state.purchasing} purchaseCancel={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingridients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        purchased: state.order.purchased,\r\n        isAuthenticated: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onIngridientAdded: (ingName) => dispatch(actions.addIngridient(ingName)),\r\n        onIngridientRemoved: (ingName) => dispatch(actions.removeIngridient(ingName)),\r\n        onInitIngridients: () => dispatch(actions.initIngridients()),\r\n        onInitPurchase: () => dispatch(actions.purchaseInit()),\r\n        onSetAuthRedirectPath: (path) =>dispatch(actions.setAuthRedirectPath(path))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));\r\n","import React from 'react';\r\nimport classes from './CheckoutSummary.module.css';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst checkoutSummary = (props) => {\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>Let's get fat together!</h1>\r\n            <div style={{width: '100%', margin: 'auto'}}>\r\n                <Burger ingridients={props.ingridients}/>\r\n            </div>\r\n            <Button \r\n                btnType=\"Danger\"\r\n                clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button \r\n                btnType=\"Success\"\r\n                clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default checkoutSummary;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    let errorMassege = null;\r\n    if(props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n        errorMassege = <p className={classes.ErrorMassege}>{props.errMassege}</p>;\r\n    }\r\n\r\n    switch(props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}\r\n                onChange={props.changed}/>;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')} \r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => {\r\n                        return <option key={option.value}>{option.displayValue}</option>;\r\n                    })}\r\n                </select>\r\n                );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n                className={inputClasses.join(' ')} \r\n                {...props.elementConfig} \r\n                value={props.value}/>\r\n            break;\r\n    }\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.Label}>{props.label}</label>\r\n            {inputElement}\r\n            {errorMassege}\r\n        </div>\r\n        )};\r\n\r\nexport default input;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport classes from './ContactData.module.css';\r\n\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../hoc/axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler'\r\n\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass ContactData extends Component {\r\n    state = {\r\n        orderForm: {\r\n            name: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Your Name...'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            address: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Address'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            street: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Street'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            zipcode: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'ZIP code'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 5,\r\n                    maxLength: 5\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                errorMassege: \"* Please enter a valid Zip Code.\"\r\n            },\r\n            country: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Country'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            },\r\n            deliveryMethod: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options:[\r\n                        {value: 'fastest', displayValue: 'Fastest'},\r\n                        {value: 'cheapest', displayValue: 'Cheapest'},\r\n                    ]\r\n                },\r\n                validation: {},\r\n                value: 'fastest',\r\n                valid: true\r\n            }\r\n        },\r\n        formIsValid: false\r\n    }\r\n//everything is handled in the state, we just bind them to some consts and post them to database with the following function.\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        \r\n        const formData = {};\r\n        //timeNow holds time of the submission moment and we post it to to db and we get it in my orders page :) \r\n        const timeNow = new Date().toLocaleString();\r\n        for (let formElementIdentifier in this.state.orderForm) {\r\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n            ingridients: this.props.ings,\r\n            price: this.props.totalPrice,\r\n            orderData: formData,\r\n            orderDate: timeNow,\r\n            userId: this.props.userId\r\n        };\r\n\r\n        this.props.onOrderBurger(order, this.props.token);\r\n        // axios.post('/orders.json', order)\r\n        //     .then(response => {\r\n        //         this.setState({loading: false});\r\n        //         this.props.history.push('/');\r\n        //     })\r\n        //     .catch(error => {\r\n        //         this.setState({loading: false});\r\n        //     });\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n\r\n        if (rules.isEmail) {\r\n            const pattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n            isValid = pattern.test(value);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const cloneOrderForm = {\r\n            ...this.state.orderForm\r\n        };\r\n        const cloneElementForm = {\r\n            ...cloneOrderForm[inputIdentifier]\r\n        }\r\n\r\n        cloneElementForm.value = event.target.value;\r\n        cloneElementForm.valid = this.checkValidity(cloneElementForm.value, cloneElementForm.validation)\r\n        cloneElementForm.touched = true;\r\n        cloneOrderForm[inputIdentifier] = cloneElementForm;\r\n\r\n        let formIsValid = true;\r\n        for (let inputIdentifier in cloneOrderForm) {\r\n            formIsValid = cloneOrderForm[inputIdentifier].valid && formIsValid;\r\n        }\r\n\r\n        console.log(formIsValid);\r\n\r\n        this.setState({\r\n            orderForm: cloneOrderForm,\r\n            formIsValid: formIsValid\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.orderForm){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.orderForm[key]\r\n            })\r\n        }\r\n\r\n        let form = (\r\n            <form onSubmit={this.orderHandler}>\r\n                {formElementsArray.map(formElement => (\r\n                    <Input \r\n                        key={formElement.id} \r\n                        elementType={formElement.config.elementType}\r\n                        elementConfig={formElement.config.elementConfig}\r\n                        value={formElement.config.value}\r\n                        invalid={!formElement.config.valid}\r\n                        shouldValidate={formElement.config.validation}\r\n                        touched={formElement.config.touched}\r\n                        errMassege={formElement.config.errorMassege}\r\n                        changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n                ))}\r\n                <Button \r\n                    btnType=\"Success\"\r\n                    disabled={!this.state.formIsValid}>ORDER</Button>\r\n            </form>);\r\n\r\n        if (this.props.loading){\r\n            form = <Spinner />;\r\n        }\r\n\r\n        return(\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data:</h4>\r\n                {form}\r\n            </div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingridients,\r\n        totalPrice: state.burgerBuilder.totalPrice,\r\n        loading: state.order.loading,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, {Component} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\n\r\nclass Checkout extends Component {\r\n\r\n    // componentWillMount() {\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingridients = {};\r\n    //     let price = 0;\r\n    //     for (let param of query.entries()) {\r\n    //         if (param[0] === 'price'){\r\n    //             price = param[1];\r\n    //         }\r\n    //         else {\r\n    //             ingridients[param[0]] = +param[1];\r\n    //         }\r\n    //     }\r\n    //     this.setState({ingridients: ingridients, totalPrice: price});\r\n    // }\r\n\r\n\r\n    checkoutCancelled = () => {\r\n        this.props.history.goBack();\r\n    }\r\n    checkoutContinued = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n\r\n    render() {\r\n        let summary = <Redirect to=\"/\" />\r\n        if (this.props.ings) {\r\n            const purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n            summary = (\r\n                <div>\r\n                    {purchasedRedirect}\r\n                    <CheckoutSummary \r\n                        ingridients={this.props.ings}\r\n                        checkoutCancelled={this.checkoutCancelled}\r\n                        checkoutContinued={this.checkoutContinued}/>\r\n                    <Route path={this.props.match.url + '/contact-data'}\r\n                        component={ContactData} \r\n                        // render={(props) => <ContactData \r\n                        //     ingridients= {this.props.ings} \r\n                        //     price={this.props.totalPrice}\r\n                        //     {...props}/>}\r\n                        />\r\n                </div>);\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        ings: state.burgerBuilder.ingridients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport classes from './Auth.module.css';\r\nimport Input from '../../components/UI/Input/Input';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nclass Auth extends Component {\r\n    state = {\r\n        controls: {\r\n            email: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'email',\r\n                    placeholder: 'Your Email'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    isEmail: true\r\n                },\r\n                valid: false,\r\n                touched: false,\r\n                \r\n            },\r\n            password: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'password',\r\n                    placeholder: 'Password'\r\n                },\r\n                value: '',\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                },\r\n                valid: false,\r\n                touched: false\r\n            }\r\n        },\r\n        isSignup: true\r\n    }\r\n\r\n    componentDidMount () {\r\n        if (!this.props.buildingBurger && this.props.authRedirectPath !== '/') {\r\n            this.props.onSetAuthRedirectPath();\r\n        }\r\n    }\r\n\r\n    checkValidity(value, rules) {\r\n        let isValid = true;\r\n\r\n        if (rules.required ) {\r\n            isValid = value.trim() !== '' && isValid;\r\n        }\r\n\r\n        if (rules.minLength) {\r\n            isValid = value.length >= rules.minLength && isValid;\r\n        }\r\n\r\n        if (rules.maxLength) {\r\n            isValid = value.length <= rules.maxLength && isValid;\r\n        }\r\n        if (rules.isEmail) {\r\n            const pattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n            isValid = pattern.test(value);\r\n        }\r\n\r\n        return isValid;\r\n    }\r\n\r\n    inputChangedHandler = (event, controlName) => {\r\n        const updatedControls = {\r\n            ...this.state.controls,\r\n            [controlName]: {\r\n                ...this.state.controls[controlName],\r\n                value: event.target.value,\r\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\r\n                touched: true\r\n            }\r\n        }\r\n        this.setState({controls: updatedControls});\r\n    }\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup);\r\n    }\r\n\r\n    swithAuthModeHandler = () => {\r\n        this.setState(prevState => {\r\n            return {isSignup: !prevState.isSignup}\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const formElementsArray = [];\r\n        for (let key in this.state.controls){\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.controls[key]\r\n            })\r\n        }\r\n//form\r\n        let form = null;\r\n        this.props.loading ? form = <Spinner /> :\r\n        form = formElementsArray.map(formElement => (\r\n            <Input \r\n                key={formElement.id}\r\n                elementType={formElement.config.elementType}\r\n                elementConfig={formElement.config.elementConfig}\r\n                value={formElement.config.value}\r\n                invalid={!formElement.config.valid}\r\n                shouldValidate={formElement.config.validation}\r\n                touched={formElement.config.touched}\r\n                errMassege={formElement.config.errorMassege}\r\n                changed={(event) => this.inputChangedHandler(event, formElement.id)}/>\r\n        ));\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = (\r\n                <p>{this.props.error.message}</p>\r\n            )\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />;\r\n        }\r\n//\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                <form onSubmit={this.submitHandler}>\r\n                    {form}\r\n                    <Button btnType=\"Success\">{this.state.isSignup ? 'Sign Up' : 'Login'} (Beta)</Button>\r\n                </form>\r\n                <Button\r\n                    clicked = {this.swithAuthModeHandler}\r\n                    btnType=\"Danger\">{this.state.isSignup ? 'Already Registered? Log In' : 'Need an Account? Sign Up'}</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loading: state.auth.loading,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger: state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(actions.auth(email, password, isSignup)),\r\n        onSetAuthRedirectPath : () => dispatch(actions.setAuthRedirectPath('/'))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../../store/actions/index';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount () {\r\n        this.props.onLogout();\r\n    }\r\n\r\n    render () {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onLogout: () => dispatch(actions.logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\r\n\r\nimport classes from './Order.module.css';\r\nimport Button from '../UI/Button/Button';\r\n\r\nconst order = (props) => {\r\n    const ingridients = [];\r\n\r\n    for (let ingridientName in props.ingridients){\r\n        ingridients.push({\r\n            name: ingridientName,\r\n            amount: props.ingridients[ingridientName]\r\n        });\r\n\r\n    }\r\n\r\n    const ingridientOutput = ingridients.map(ig => {\r\n        return <span\r\n            style={{\r\n                display: 'inline-block',\r\n                textTransform: 'capitalize',\r\n                margin: '0 8px',\r\n                border: '1px solid #ccc',\r\n                padding: '5px'\r\n            }} \r\n            key={ig.name}>\r\n                {ig.name} ({ig.amount})</span>\r\n            \r\n    });\r\n\r\n    return(\r\n        <div className={classes.Order}>\r\n            <p>Ingredients: {ingridientOutput}</p>\r\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n            <p>Order date: <span className={classes.Date}>{props.date}</span></p>\r\n            {/* added date of now by me */}\r\n            <div>\r\n                <Button \r\n                    btnType=\"Danger\"\r\n                    clicked={props.delete}>Delete</Button>\r\n            </div>\r\n            \r\n        </div>\r\n        );\r\n};\r\n\r\nexport default order;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from '../../hoc/axios-orders';\r\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Order from '../../components/Order/Order';\r\nimport * as actions from '../../store/actions/index';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n\r\n    render() {\r\n        let orders = <Spinner />;\r\n        if (!this.props.loading) {\r\n            orders = \r\n                this.props.orders.map(order => (\r\n                    <Order key={order.id}\r\n                    ingridients={order.ingridients}\r\n                    price={order.price}\r\n                    date={order.orderDate}\r\n                    delete={() => this.props.onDeleteOrders(order.id)}/>\r\n                )).reverse()\r\n        }\r\n        // if (this.props.error) {\r\n        //     orders = (\r\n        //         <div>\r\n        //             <p style={{textAlign: 'center'}}>Can not load the Orders, Permission Denied!</p>\r\n        //             <hr />\r\n        //         </div>)\r\n        // }\r\n        console.log(this.props.orders);\r\n        return(\r\n            <div>\r\n                {orders}\r\n                {/* reverse added to reverse the order in my orders, may change later */}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        orders: state.order.orders,\r\n        loading: state.order.loading,\r\n        error: state.order.error,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n        onDeleteOrders: (id) => dispatch(actions.deleteOrder(id))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios));","import { useEffect } from 'react';\r\n\r\nconst Instagram = () => {\r\n\r\n    useEffect(() => {\r\n        window.location.href = \"http://instagram.com/arslnmusic\";\r\n    }, []);\r\n\r\n    return null;\r\n}\r\n\r\nexport default Instagram;\r\n\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport Layout from '../hoc/Layout/Layout';\r\nimport BurgerBuilder from '../containers/BurgerBuilder/BurgerBuilder';\r\nimport Checkout from './Checkout/Checkout';\r\nimport Auth from './Auth/Auth';\r\nimport Logout from './Auth/Logout/Logout';\r\n\r\nimport Orders from './Orders/Orders';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport * as actions from '../store/actions/index';\r\nimport Instagram from '../components/Navigation/NavigationItems/NavigationItem/Instagram';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onTryAutoSignup();\r\n  }\r\n\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component= {Auth} />\r\n        <Route path=\"/contact\" component= {Instagram} />\r\n        <Route path=\"/\" exact component= {BurgerBuilder} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuthenticated) {\r\n      routes = (\r\n        <Switch>\r\n            <Route path=\"/checkout\" component= {Checkout} />\r\n            <Route path=\"/orders\" component= {Orders} />\r\n            <Route path=\"/logout\" component= {Logout} />\r\n            <Route path=\"/contact\" component= {Instagram} />\r\n            <Route path=\"/auth\" component= {Auth} />\r\n            <Route path=\"/\" exact component= {BurgerBuilder} />\r\n            <Redirect to=\"/\" />\r\n        </Switch>);\r\n    }\r\n    return (\r\n      <div>\r\n        <Layout>\r\n            {routes}      \r\n        </Layout>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuthenticated: state.auth.token !== null\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onTryAutoSignup: () => dispatch(actions.authCheckState())\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n//cause of connect, if routing didnt work in app, we have to include \"withRouter\" high order wrapper\r\n//which is included in react-router-dom to fix the problem. now all fine!\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingridients : null,\r\n        totalPrice: 4, \r\n        error: false,\r\n        building: false\r\n}\r\n\r\nconst INGRIDIENT_PRICES = {\r\n    salad: 0.5,\r\n    cheese: 0.4,\r\n    meat: 1.5,\r\n    bacon: 2,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.ADD_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    ...state.ingridients,\r\n                    [action.ingridientName]: state.ingridients[action.ingridientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGRIDIENT_PRICES[action.ingridientName],\r\n                building: true\r\n            }\r\n        case actionTypes.REMOVE_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                ingridients: {\r\n                    ...state.ingridients,\r\n                    [action.ingridientName]: state.ingridients[action.ingridientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGRIDIENT_PRICES[action.ingridientName],\r\n                building: true\r\n            }\r\n        case actionTypes.SET_INGRIDIENT:\r\n            return {\r\n                ...state,\r\n                //ingridients: action.ingridients,\r\n                ingridients: {\r\n                    salad: action.ingridients.salad,\r\n                    bacon: action.ingridients.bacon,\r\n                    cheese: action.ingridients.cheese,\r\n                    meat: action.ingridients.meat\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                building: false\r\n            };\r\n        case actionTypes.FETCH_INGRIDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    loading: false,\r\n    purchased: false,\r\n    error: null\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId,\r\n                \r\n            };\r\n            return{\r\n                ...state,\r\n                loading: false,\r\n                orders: state.orders.concat(newOrder),\r\n                purchased: true\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return{\r\n                ...state,\r\n                loading: false\r\n            };\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                orders: action.orders,\r\n                loading: false\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                error: action.error\r\n            }\r\n        case actionTypes.DELETE_ORDER:\r\n            const newOrders = state.orders.filter(order => order.id !== action.orderId);\r\n            return {\r\n                ...state,\r\n                orders: newOrders\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    loading: false,\r\n    authRedirectPath: '/'\r\n}\r\n\r\nconst authStart = (state, action) => {\r\n    return {...state, error: null, loading: true}\r\n}\r\n\r\nconst authSuccess = (state, action) => {\r\n    return {...state, token: action.idToken, userId: action.userId, error: null, loading: false}\r\n}\r\n\r\nconst authFail = (state, action) => {\r\n    return {...state, error: action.error, loading: false}\r\n}\r\n\r\n\r\nconst authLogout = (state, action) => {\r\n    return {...state, userId: null, token: null}\r\n}\r\n\r\nconst setAuthRedirectPath = (state, action) => {\r\n    return {...state, authRedirectPath: action.path}\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case actionTypes.AUTH_START:\r\n           return authStart(state, action); \r\n        case actionTypes.AUTH_SUCCESS:\r\n            return authSuccess(state, action);\r\n        case actionTypes.AUTH_FAIL:\r\n            return authFail(state, action);\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return authLogout(state, action);\r\n        case actionTypes.SET_AUTH_REDIRECT_PATH:\r\n            return setAuthRedirectPath(state, action);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\n\r\n//redux devtools config:\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst rootReducer = combineReducers({\r\n  burgerBuilder: burgerBuilderReducer,\r\n  order: orderReducer,\r\n  auth: authReducer\r\n})\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\r\n\r\nconst app = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {app}\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}